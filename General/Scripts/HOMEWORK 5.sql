-- ADDING KEYS TO TABLES
ALTER TABLE ROUTES
ADD CONSTRAINT FK_ROUTE_01
FOREIGN KEY (ORIGIN)
REFERENCES AIRPORTS (IATA_CODE);

ALTER TABLE ROUTES 
ADD CONSTRAINT FK_ROUTE_02
FOREIGN KEY (DESTINATION)
REFERENCES AIRPORTS (IATA_CODE);

ALTER TABLE ROUTES
ADD CONSTRAINT FK_ROUTE_03
FOREIGN KEY (PARENT_ROUTE)
REFERENCES ROUTES (ROUTE_CODE);

ALTER TABLE FLIGHTS 
ADD CONSTRAINT FK_FLIGHTS_01
FOREIGN KEY (ROUTE_CODE)
REFERENCES ROUTES (ROUTE_CODE);

ALTER TABLE FLIGHTS
ADD CONSTRAINT FK_FLIGHTS_02
FOREIGN KEY (AIRPLANE)
REFERENCES AIRPLANES (AIRCRAFT_REGISTRATION);

ALTER TABLE TICKETS 
ADD CONSTRAINT FK_TICKETS_01
FOREIGN KEY (FLIGHT_ID, ROUTE_CODE, DEPARTURE)
REFERENCES FLIGHTS(FLIGHT_ID, ROUTE_CODE, DEPARTURE);

ALTER TABLE TICKETS 
ADD CONSTRAINT FK_TICKETS_02
FOREIGN KEY (PASSENGER_ID)
REFERENCES PASSENGERS(ID);

ALTER TABLE TICKETS 
ADD CONSTRAINT FK_TICKETS_03
FOREIGN KEY (ROUTE_CODE)
REFERENCES ROUTES(ROUTE_CODE);

-- List the passenger information ordered by passenger first name.
SELECT *
FROM PASSENGERS
ORDER BY FIRSTNME;

-- Show the origin, destination, and distance of the routes with a distance 
--greater than 5000 km ordered by distance.
SELECT ORIGIN, DESTINATION, DISTANCE
FROM ROUTES
WHERE DISTANCE > 5000
ORDER BY DISTANCE;

-- Show all route information with destination MADRID and flight longer than 
--60 minutes
SELECT *
FROM ROUTES
WHERE DESTINATION = 'MAD'
AND FLIGHT_MINUTES > 60;

SELECT A.*
FROM ROUTES A 
INNER JOIN TICKETS B
ON (A.ROUTE_CODE = B.ROUTE_CODE)
WHERE A.DESTINATION = 'MAD'
AND A.FLIGHT_MINUTES > 60;

SELECT a.*
FROM ROUTES a INNER JOIN AIRPORTS b
ON (a.ORIGIN=b.IATA_CODE)
WHERE b.CITY='Madrid'
AND FLIGHT_MINUTES > 60;

-- How many women have flown on the first three days of July 2024? If the 
--same passenger travels more than once during this period, we should only 
--count it once.
SELECT COUNT(DISTINCT ID)
FROM 
(SELECT ID, FIRSTNME, GENDER FROM PASSENGERS WHERE GENDER = 'F')
INNER JOIN
(SELECT PASSENGER_ID, DEPARTURE FROM TICKETS
WHERE DEPARTURE BETWEEN '2024-07-01' AND '2024-07-03')
ON (ID = PASSENGER_ID);

SELECT COUNT(DISTINCT ID)
FROM PASSENGERS P, TICKETS T
WHERE P.ID = T.PASSENGER_ID
AND GENDER='F'
AND DEPARTURE BETWEEN '2024-07-01' AND '2024-07-03';

-- Obtain for each route the number of Business class tickets sold.
SELECT R.ROUTE_CODE, COALESCE(T.BUSINESS_TICKETS, 0) AS BUSINESS_TICKETS
FROM ROUTES R
LEFT JOIN
(SELECT ROUTE_CODE, COUNT(*) AS BUSINESS_TICKETS
FROM TICKETS
WHERE CLASS = 'B'
GROUP BY ROUTE_CODE) T
ON R.ROUTE_CODE = T.ROUTE_CODE
ORDER BY ROUTE_CODE;

SELECT ROUTE_CODE, COUNT(*)
FROM TICKETS
WHERE CLASS = 'B'
GROUP BY ROUTE_CODE;

-- Which routes have never been sold?
SELECT R.ROUTE_CODE, COALESCE(T.TICKETS, 0) AS TICKETS
FROM ROUTES R
LEFT JOIN
(SELECT ROUTE_CODE, COUNT(*) AS TICKETS
FROM TICKETS
GROUP BY ROUTE_CODE) T
ON R.ROUTE_CODE = T.ROUTE_CODE
ORDER BY TICKETS;

SELECT ROUTE_CODE
FROM ROUTES
WHERE ROUTE_CODE NOT IN (SELECT DISTINCT ROUTE_CODE
FROM TICKETS
WHERE ROUTE_CODE IS NOT NULL);

SELECT R.ROUTE_CODE
FROM ROUTES R LEFT OUTER JOIN TICKETS T
ON (T.ROUTE_CODE=R.ROUTE_CODE)
WHERE TICKET_ID IS NULL;

-- Which is the longest route
SELECT ROUTE_CODE, DISTANCE
FROM ROUTES
WHERE DISTANCE = (SELECT MAX(DISTANCE) FROM ROUTES)


-- Obtain the passenger's full name and the ticket id bought by those with 
--LAST name equals to Smith.
SELECT A.TICKET_ID, B.FIRSTNME, B.MIDINIT, B.LASTNAME
FROM TICKETS A
INNER JOIN PASSENGERS B 
ON (A.PASSENGER_ID = B.ID)
WHERE B.LASTNAME = 'Smith';

-- Count the number of passengers that have bought a ticket flown by Airbus 
--aircraft identification 'IE09959'. If the same person travels more than 
--once during this period, we should only count it once.
SELECT COUNT(DISTINCT B.TICKET_ID)
FROM FLIGHTS A
INNER JOIN TICKETS B
ON (A.FLIGHT_ID = B.FLIGHT_ID)
WHERE A.AIRPLANE = 'IE09959';

SELECT COUNT(DISTINCT ID)
FROM PASSENGERS A 
INNER JOIN TICKETS B 
ON (A.ID = B.PASSENGER_ID)
INNER JOIN FLIGHTS C
ON (B.FLIGHT_ID = C.FLIGHT_ID AND B.ROUTE_CODE = C.ROUTE_CODE AND B.DEPARTURE = C.DEPARTURE)
INNER JOIN AIRPLANES D 
ON (C.AIRPLANE = D.AIRCRAFT_REGISTRATION)
WHERE D.AIRCRAFT_REGISTRATION = 'IE09959';

-- For each Italian passenger, show the number of tickets bought and the 
--number OF different routes flown.
SELECT A.ID, A.COUNTRY, COUNT(B.TICKET_ID), COUNT(DISTINCT B.ROUTE_CODE)
FROM PASSENGERS A 
INNER JOIN TICKETS B 
ON A.ID = B.PASSENGER_ID
INNER JOIN ROUTES C 
ON B.ROUTE_CODE = C.ROUTE_CODE
WHERE A.COUNTRY = 'ITALY'
GROUP BY A.ID, A.COUNTRY;


SELECT PASSENGER_ID, COUNT(*), COUNT(DISTINCT ROUTE_CODE)
FROM PASSENGERS, TICKETS 
WHERE ID = PASSENGER_ID AND COUNTRY = 'ITALY'
GROUP BY PASSENGER_ID;

-- Show for all routes longer than 2 hours, the number of tickets sold per route.
SELECT A.ROUTE_CODE, COUNT(B.TICKET_ID) AS NUMBER_OF_TICKETS
FROM ROUTES A, TICKETS B
WHERE A.ROUTE_CODE = B.ROUTE_CODE 
AND A.FLIGHT_MINUTES > 120
GROUP BY A.ROUTE_CODE;

SELECT A.ROUTE_CODE, COUNT(B.TICKET_ID) AS NUMBER_OF_TICKETS
FROM ROUTES A
LEFT JOIN TICKETS B
ON A.ROUTE_CODE = B.ROUTE_CODE 
AND A.FLIGHT_MINUTES > 120
GROUP BY A.ROUTE_CODE;

SELECT a.ROUTE_CODE , COUNT(*)
FROM ROUTES a LEFT OUTER JOIN FLIGHTS b
ON (a.ROUTE_CODE=b.ROUTE_CODE)
INNER JOIN TICKETS c
ON (b.FLIGHT_ID=c.FLIGHT_ID 
AND b.ROUTE_CODE=c.ROUTE_CODE 
AND b.DEPARTURE=c.DEPARTURE)
WHERE a.FLIGHT_MINUTES > 120
GROUP BY a.ROUTE_CODE;

-- For each flight longer than 10,000 km, show the average, maximum, and
--minimum economy prices.
SELECT A.FLIGHT_ID, B.DISTANCE, AVG(A.PRICE_ECONOMY) AS AVERAGE, MAX(A.PRICE_ECONOMY) AS MAXIMUM, MIN(PRICE_ECONOMY) AS MINIMUM
FROM FLIGHTS A
INNER JOIN ROUTES B
ON (A.ROUTE_CODE = B.ROUTE_CODE)
WHERE B.DISTANCE > 10000
GROUP BY A.FLIGHT_ID, B.DISTANCE;

SELECT FLIGHT_ID, AVG(PRICE_ECONOMY), MAX(PRICE_ECONOMY), MIN(PRICE_ECONOMY)
FROM ROUTES a LEFT OUTER JOIN FLIGHTS b
ON (a.ROUTE_CODE=b.ROUTE_CODE)
WHERE DISTANCE > 10000
GROUP BY FLIGHT_ID;

-- Suppose today is July 7th. How many tickets were sold each day for the 
--last 3 days?
SELECT DATE(DEPARTURE), COUNT(*)
FROM TICKETS
WHERE DATE(DEPARTURE) BETWEEN '2024-07-05' AND '2024-07-07'
GROUP BY DEPARTURE;

-- A route has an origin airport and a destination airport. How many 
--different routes does the company have? Be aware that we're not referring 
--to ROUTE_CODE.
SELECT COUNT(*)
FROM 
(SELECT DISTINCT ORIGIN, DESTINATION FROM ROUTES);

SELECT A.MODEL, B.ROUTE_CODE, AVG(YEAR(CURRENT DATE) - YEAR(A.BUILD_DATE)), SUM(A.CREW_MEMBERS) AS CREW_MEMBERS
FROM AIRPLANES A
LEFT JOIN FLIGHTS B 
ON (A.AIRCRAFT_REGISTRATION = B.AIRPLANE)
WHERE B.ROUTE_CODE IS NULL
GROUP BY A.MODEL, B.ROUTE_CODE;

SELECT AVG(YEAR(CURRENT DATE) - YEAR(A.BUILD_DATE)), SUM(A.CREW_MEMBERS)
FROM AIRPLANES A
LEFT JOIN FLIGHTS B 
ON (A.AIRCRAFT_REGISTRATION = B.AIRPLANE)
WHERE B.ROUTE_CODE IS NULL;

SELECT AVG(YEAR(CURRENT DATE - BUILD_DATE)) AVGAGE,
SUM(a.CREW_MEMBERS) NUMCREW
FROM AIRPLANES a LEFT OUTER JOIN FLIGHTS b
ON (a.AIRCRAFT_REGISTRATION=b.AIRPLANE)
WHERE b.AIRPLANE IS NULL;

SELECT CLASS, FLIGHT_ID, ROUTE_CODE, DEPARTURE, MIN(PRICE), MAX(PRICE)
FROM TICKETS 
GROUP BY CLASS, FLIGHT_ID, ROUTE_CODE, DEPARTURE
HAVING MIN(PRICE) != MAX(PRICE);

SELECT A.FLIGHT_ID, A.ROUTE_CODE, A.DEPARTURE, B.CLASS, B.PRICE,
CASE WHEN B.CLASS = 'B' THEN A.PRICE_BUSINESS
WHEN B.CLASS = 'P' THEN A.PRICE_PREMIUM
ELSE A.PRICE_ECONOMY END FLIGHTPRICE
FROM FLIGHTS A 
INNER JOIN TICKETS B
ON (A.FLIGHT_ID = B.FLIGHT_ID AND A.ROUTE_CODE = B.ROUTE_CODE AND A.DEPARTURE = B.DEPARTURE)
WHERE B.PRICE != CASE WHEN B.CLASS = 'B' THEN A.PRICE_BUSINESS 
WHEN B.CLASS = 'P' THEN A.PRICE_PREMIUM
ELSE A.PRICE_ECONOMY END;


SELECT A.ROUTE_CODE, COUNT(B.TICKET_ID)
FROM ROUTES A
INNER JOIN TICKETS B 
ON (A.ROUTE_CODE = B.ROUTE_CODE)
WHERE A.FLIGHT_MINUTES = 
(SELECT MIN(FLIGHT_MINUTES) FROM ROUTES)
GROUP BY A.ROUTE_CODE;


SELECT COUNT(DISTINCT PASSENGER_ID)
FROM TICKETS t INNER JOIN FLIGHTS f
ON (t.FLIGHT_ID=f.FLIGHT_ID AND t.ROUTE_CODE=f.ROUTE_CODE AND
t.DEPARTURE=f.DEPARTURE)
WHERE f.PRICE_ECONOMY = (SELECT MIN(PRICE_ECONOMY) FROM FLIGHTS);

SELECT A.PRICE_ECONOMY, B.ORIGIN, B.DESTINATION
FROM FLIGHTS A, ROUTES B
WHERE A.ROUTE_CODE = B.ROUTE_CODE 
AND A.PRICE_ECONOMY = (SELECT MIN(PRICE_ECONOMY) FROM FLIGHTS);

SELECT A.FLIGHT_ID, COUNT(A.TICKET_ID)
FROM AIRPLANES B
INNER JOIN FLIGHTS C
ON (B.AIRCRAFT_REGISTRATION = C.AIRPLANE)
INNER JOIN TICKETS A
ON (C.FLIGHT_ID = A.FLIGHT_ID AND C.ROUTE_CODE = A.ROUTE_CODE AND C.DEPARTURE = A.DEPARTURE)
WHERE B.SEATS_BUSINESS = (SELECT MAX(SEATS_BUSINESS) FROM AIRPLANES)
GROUP BY A.FLIGHT_ID;


SELECT COUNTRY, COUNT(DISTINCT ID) AS NUMBER_PASS
FROM PASSENGERS A
INNER JOIN TICKETS B 
ON (A.ID = B.PASSENGER_ID)
INNER JOIN ROUTES C 
ON (B.ROUTE_CODE = C.ROUTE_CODE)
WHERE A.COUNTRY != 'UNITED STATES'
AND VIPCARD IS NOT NULL
AND C.ORIGIN IN ('LHR', 'LGW')
GROUP BY COUNTRY
ORDER BY NUMBER_PASS DESC 
LIMIT 3;

SELECT DISTINCT COUNTRY, ORIGIN, VIPCARD
FROM PASSENGERS A
INNER JOIN TICKETS B 
ON (A.ID = B.PASSENGER_ID)
INNER JOIN ROUTES C 
ON (B.ROUTE_CODE = C.ROUTE_CODE)
WHERE A.COUNTRY != 'UNITED STATES'
AND VIPCARD IS NOT NULL
AND C.ORIGIN IN ('LHR', 'LGW');

SELECT d.COUNTRY, COUNT(*)
FROM AIRPORTS a INNER JOIN ROUTES b
ON (a.IATA_CODE=b.ORIGIN)
INNER JOIN TICKETS c
ON (b.ROUTE_CODE=c.ROUTE_CODE)
INNER JOIN PASSENGERS d
ON (c.PASSENGER_ID=d.ID)
WHERE d.COUNTRY <> 'UNITED STATES' AND d.VIPCARD IS NOT NULL
GROUP BY d.COUNTRY
ORDER BY 2 DESC
LIMIT 3;

SELECT COUNTRY, COUNT(*) AS NUMBER_PASS
FROM PASSENGERS A
INNER JOIN TICKETS B 
ON (A.ID = B.PASSENGER_ID)
INNER JOIN ROUTES C 
ON (B.ROUTE_CODE = C.ROUTE_CODE)
WHERE A.COUNTRY != 'UNITED STATES'
AND VIPCARD IS NOT NULL
GROUP BY COUNTRY
ORDER BY NUMBER_PASS DESC 
LIMIT 3;

SELECT B.ROUTE_CODE, SUM(PRICE)
FROM AIRPLANES A 
INNER JOIN FLIGHTS B 
ON (A.AIRCRAFT_REGISTRATION = B.AIRPLANE)
INNER JOIN TICKETS C 
ON(C.FLIGHT_ID = B.FLIGHT_ID AND C.ROUTE_CODE = B.ROUTE_CODE AND C.DEPARTURE = B.DEPARTURE)
WHERE (COALESCE(A.SEATS_ECONOMY, 0) + COALESCE(A.SEATS_PREMIUM, 0) + COALESCE(A.SEATS_BUSINESS, 0)) = 
(SELECT MAX(COALESCE(SEATS_ECONOMY, 0) + COALESCE(SEATS_PREMIUM, 0) + COALESCE(SEATS_BUSINESS, 0)) FROM AIRPLANES)
GROUP BY B.ROUTE_CODE;

SELECT COUNT(*) - (SELECT COUNT(DISTINCT ORIGIN || '-' || DESTINATION) FROM ROUTES)
FROM AIRPORTS A, AIRPORTS B
WHERE A.IATA_CODE != B.IATA_CODE;

SELECT A.IATA_CODE AS ORIGIN, B.IATA_CODE AS DESTINATION
FROM AIRPORTS A, AIRPORTS B
WHERE A.IATA_CODE != B.IATA_CODE;

SELECT A.IATA_CODE AS ORIGIN, A.COUNTRY, B.IATA_CODE AS DESTINATION, B.COUNTRY
FROM AIRPORTS A, AIRPORTS B
WHERE A.IATA_CODE != B.IATA_CODE
AND A.COUNTRY = 'FRANCE' AND B.COUNTRY = 'FRANCE'
AND (A.IATA_CODE, B.IATA_CODE) NOT IN (SELECT DISTINCT ORIGIN, DESTINATION FROM ROUTES);

SELECT ROUTE_CODE, DATE(DEPARTURE), COUNT(*) AS TICKETS
FROM TICKETS
GROUP BY ROUTE_CODE, DATE(DEPARTURE)
ORDER BY TICKETS DESC
LIMIT 1;

SELECT ROUTE_CODE, DATE(DEPARTURE), COUNT(*)
FROM TICKETS
GROUP BY ROUTE_CODE, DATE(DEPARTURE)
HAVING COUNT(*) >= ALL (SELECT COUNT(*)
FROM TICKETS
GROUP BY ROUTE_CODE, DATE(DEPARTURE));

SELECT DISTINCT A.ORIGIN || '-' || A.DESTINATION AS DIRECT_FLIGHT, 
B.ORIGIN || '-' || B.DESTINATION || '-' || C.DESTINATION AS ONE_STOP
FROM ROUTES A
INNER JOIN ROUTES B 
ON (A.ORIGIN = B.ORIGIN)
INNER JOIN ROUTES C 
ON (B.DESTINATION = C.ORIGIN)
WHERE A.DESTINATION = C.DESTINATION;

SELECT p.FIRSTNME, p.MIDINIT, p.LASTNAME
FROM PASSENGERS p
WHERE ID IN 
(SELECT PASSENGER_ID 
FROM TICKETS
GROUP BY PASSENGER_ID
HAVING COUNT(*) >= ALL (SELECT COUNT(*)
FROM TICKETS
GROUP BY PASSENGER_ID));

SELECT NUMORIGIN + NUMDESTINATION
FROM (SELECT COUNT(*) NUMORIGIN
FROM AIRPORTS A 
INNER JOIN ROUTES B 
ON (A.IATA_CODE = B.ORIGIN)
INNER JOIN TICKETS C 
ON (B.ROUTE_CODE = C.ROUTE_CODE)
INNER JOIN PASSENGERS D
ON (C.PASSENGER_ID = D.ID)
WHERE A.COUNTRY = D.COUNTRY),
(SELECT COUNT(*) NUMDESTINATION
FROM AIRPORTS A
INNER JOIN ROUTES B
ON (A.IATA_CODE = B.DESTINATION)
INNER JOIN TICKETS C
ON (B.ROUTE_CODE = C.ROUTE_CODE)
INNER JOIN PASSENGERS D
ON (C.PASSENGER_ID = D.ID)
WHERE A.COUNTRY = D.COUNTRY);


SELECT A.DEPARTURE, A.CAPACITY - B.SOLD
FROM (SELECT DATE(A.DEPARTURE) DEPARTURE, 
SUM(COALESCE(B.SEATS_BUSINESS, 0) + COALESCE(B.SEATS_PREMIUM, 0) + COALESCE(B.SEATS_ECONOMY, 0)) CAPACITY
FROM FLIGHTS A
INNER JOIN AIRPLANES B
ON (A.AIRPLANE = B.AIRCRAFT_REGISTRATION)
GROUP BY DATE(A.DEPARTURE)) A
INNER JOIN 
(SELECT DATE(A.DEPARTURE) DEPARTURE, COUNT(*) SOLD
FROM FLIGHTS A
INNER JOIN TICKETS B 
ON (A.FLIGHT_ID = B.FLIGHT_ID AND A.ROUTE_CODE = B.ROUTE_CODE AND A.DEPARTURE = B.DEPARTURE)
GROUP BY DATE(A.DEPARTURE)) B 
ON (A.DEPARTURE = B.DEPARTURE);


SELECT A.FLIGHT_ID, SUM((B.SEATS_BUSINESS - C.SOLD) * C.PRICE) LOST
FROM FLIGHTS A
INNER JOIN AIRPLANES B 
ON (A.AIRPLANE = B.AIRCRAFT_REGISTRATION)
INNER JOIN 
(SELECT FLIGHT_ID, ROUTE_CODE, DEPARTURE, PRICE, COUNT(*) SOLD
FROM TICKETS
WHERE CLASS = 'B' 
GROUP BY FLIGHT_ID, ROUTE_CODE, DEPARTURE, PRICE) C 
ON (A.FLIGHT_ID = C.FLIGHT_ID AND A.ROUTE_CODE = C.ROUTE_CODE AND A.DEPARTURE = C.DEPARTURE)
WHERE B.SEATS_BUSINESS != C.SOLD
GROUP BY A.FLIGHT_ID;



















