SELECT FIRSTNME, DEPTNAME
FROM EMPLOYEE, DEPARTMENT
WHERE WORKDEPT = DEPTNO;

-- TWO COLUMNS THAT NEED TO JOIN
SELECT COL1, COL2, COL3, COL4
FROM DATA1, DATA2
WHERE COL2 = COL AND COL3 = COL;

-- WHEN COLUMNS HAVE THE SAME NAME
SELECT T1.C1, C2
FROM T1, T2
WHERE T1.C1 = T2.C1;

SELECT A.C1, C2
FROM T1 A, T2 B
WHERE A.C1 = B.C1 --Can also use aliasing

-- JOINING MULTIPLE TABLES
SELECT C1, Y1
FROM T1 A, T2 B, T3 C
WHERE A.C1 = B.X1
AND B.X2 = C.Y2;


-- INNER JOIN (COMBINING ROWS WITH SAME VALUE)
SELECT *
FROM T1
INNER JOIN T2
ON (C1 = C3); --This IS the same AS the ones above

-- LEFT OUTER JOIN (COMBINE ALL SAME VALUES & ALL EXTRA ON LEFT T1)
SELECT C1, C2, C3, C4
FROM T1
LEFT OUTER JOIN T2
ON (C1 = C3);

-- RIGHT OUTER JOIN (COMBINE ALL SAME VALUES & ALL EXTRA ON RIGHT T2)
SELECT C1, C2, C3, C4
FROM T1
LEFT OUTER JOIN T2
ON (C1 = C3);

-- FULL OUTER JOIN (ALL VALUES FROM ALL SIDES)
SELECT C1, C2, C3, C4
FROM T1
FULL OUTER JOIN T2
ON (C1 = C3);

-- SPECIAL JOINS
-- CROSS JOIN (SHOWS PRODUCT OF ALL THE ROWS IN THE FIRST TABLE BY THAT OF THE SECOND)
SELECT E.Name, D.DepartmentName
FROM P_EMP E
CROSS JOIN P_DEP D; -- Lists EVERY EmpName WITH EVERY different possible dept

-- SELF JOIN
SELECT A.COLA, B.COLA, B.COLB
FROM (SELECT COLA, COLB
	FROM T1
	WHERE COLA = 1) A
INNER JOIN 
(SELECT COLA, COLB
	FROM T1
	WHERE COLA > 1)
ON (A.COLB = B.COLB);

-- QUANTIFIED PREDICATES
SELECT COLA
FROM T1
WHERE COLA = ANY(SELECT COLX FROM T2);

SELECT *
FROM T1
WHERE (COLA, COLB) = ANY(COLX, COLY - 10 FROM T2); --ANY MEANS AT LEAST ONE

SELECT COLA
FROM T1
WHERE COLA > ALL(SELECT COLX FROM T2); -- ALL MEANS HAS TO BEAT ALL

-- ALIASING / ORDER OF SQL OPERATIONS
-- NORMAL SQL STATEMENT
SELECT
FROM
WHERE 
GROUP BY 
HAVING 
ORDER BY 
LIMIT;

-- HOW SQL STATEMENTS ARE READ
FROM
WHERE 
GROUP BY 
HAVING 
SELECT --Aliasing for columns can only be used after this 
ORDER BY
LIMIT;

-- Tables outside subselect are visible on inside but not vice versa

--UNION ALL (PRODUCE RESULT OF TABLES LISTED TOGETHER)
SELECT *
FROM T1
UNION ALL
SELECT *
FROM T2;

SELECT COLA as NUM1, COLB as NUM2
FROM T1
WHERE COLA IS NOT NULL
UNION ALL
SELECT COLY, COLX
FROM T2
WHERE COLY <> 23;

-- UNION (CREATES A TABLE OF ALL DISTINCT VALUES)
SELECT COLA as NUM1, COLB as NUM2
FROM T1
WHERE COLA IS NOT NULL
UNION
SELECT COLX, COLY
FROM T2;

--SAME AS

SELECT DISTINCT NUM1, NUM2
FROM (SELECT COLA as NUM1, COLB as NUM2
FROM T1
WHERE COLA IS NOT NULL
UNION ALL
SELECT COLX, COLY
FROM T2 );

UNION -- This does NOT include duplicate VALUES 

-- FOR BOTH UNIONS, THEY WILL BE DUPLICATED VERTICALLY AND NOT 
--HORIZONTALLY































