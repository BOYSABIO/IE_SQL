-- COUNT(), SUM(), MAX(), MIN(), AVG(), DISTINCT
-- COUNT()
SELECT COUNT(*) 
FROM COUNTRIES;

-- SUM()
SELECT SUM(SALARY)
FROM TABLE_NAME;

-- MAX()
SELECT NAME FROM COUNTRIES
WHERE POPULATION = (SELECT MAX(POPULATION)
FROM COUNTRIES)

-- MIN()
MIN()

-- AVG
SELECT NAME, AVG((COALESCE(SALARY, 0) + COALESCE(BONUS, 0))) AS AVERAGE_SALARY
FROM TABLE_NAME; -- THIS IS NOT CORRECT BUT JUST A REMINDER TO USE COALESCE

-- DISTINCT
SELECT DISTINCT COUNTRY
FROM STUDENTS;

SELECT COUNT(DISTINCT COUNTRY)
FROM STUDENTS;



-- SESSION 6
CREATE TABLE COUNTRIES (
NAME VARCHAR(50) NOT NULL,
CAPITAL CHAR(40) NOT NULL,
POPULATION BIGINT);

SELECT MAX(POPULATION), MIN(POPULATION)
FROM EMPLOYEE;

SELECT NAME FROM COUNTRIES
WHERE POPULATION = (SELECT MAX(POPULATION)
FROM COUNTRIES);

SELECT MAX(AGE) AS MAX, MIN(AGE) AS MIN
FROM STUDENTS;

SELECT COUNT(*), AVG(AGE)
FROM STUDENTS
WHERE UPPER(COUNTRY) LIKE 'A%';

SELECT * FROM STUDENTS
where age = (select max(age) from students)
or age = (select min(age) from students)
order by age;

SELECT DISTINCT COUNTRY 
FROM STUDENTS;

SELECT COUNT (DISTINCT COUNTRY)
FROM STUDENTS;

SELECT COUNT(DISTINCT COUNTRY)
FROM STUDENTS
WHERE AGE < 22;

SELECT COUNT(DISTINCT SUBSTRING(NAME, 1, 1))
FROM STUDENTS;

CREATE TABLE CLASS (
STUDENT VARCHAR(20) NOT NULL,
SCORE SMALLINT);

INSERT INTO CLASS VALUES
('Luna',100),
('Lily',null),
('Leah',100),
('Lydia',100),
('Liliana',null),
('Layla',100),
('Lillian',100),
('Lucy',100),
('Leilani',100),
('Lyla',100);

SELECT COUNT(*)
FROM CLASS;

SELECT COUNT(SCORE)
FROM CLASS;

SELECT SUM(COALESCE(SCORE, 0)), MAX(SCORE), MIN(SCORE)
FROM CLASS;

SELECT COUNT(*) AS TOTAL_COUNT, COUNT(SCORE)
FROM CLASS;

SELECT COUNT(SCORE), AVG(SCORE)
FROM CLASS;

SELECT COUNT(*), AVG(COALESCE(SCORE, 0))
FROM CLASS;